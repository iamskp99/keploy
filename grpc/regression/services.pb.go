// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: grpc/regression/services.proto

package regression

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Dependency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string            `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Type string            `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Meta map[string]string `protobuf:"bytes,3,rep,name=Meta,proto3" json:"Meta,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Data []*DataBytes      `protobuf:"bytes,4,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *Dependency) Reset() {
	*x = Dependency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dependency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dependency) ProtoMessage() {}

func (x *Dependency) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dependency.ProtoReflect.Descriptor instead.
func (*Dependency) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{0}
}

func (x *Dependency) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Dependency) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Dependency) GetMeta() map[string]string {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Dependency) GetData() []*DataBytes {
	if x != nil {
		return x.Data
	}
	return nil
}

type DataBytes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bin []byte `protobuf:"bytes,1,opt,name=Bin,proto3" json:"Bin,omitempty"`
}

func (x *DataBytes) Reset() {
	*x = DataBytes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataBytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataBytes) ProtoMessage() {}

func (x *DataBytes) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataBytes.ProtoReflect.Descriptor instead.
func (*DataBytes) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{1}
}

func (x *DataBytes) GetBin() []byte {
	if x != nil {
		return x.Bin
	}
	return nil
}

type TestCaseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Captured     int64         `protobuf:"varint,1,opt,name=Captured,proto3" json:"Captured,omitempty"`
	AppID        string        `protobuf:"bytes,2,opt,name=AppID,proto3" json:"AppID,omitempty"`
	URI          string        `protobuf:"bytes,3,opt,name=URI,proto3" json:"URI,omitempty"`
	HttpReq      *HttpReq      `protobuf:"bytes,4,opt,name=HttpReq,proto3" json:"HttpReq,omitempty"`
	HttpResp     *HttpResp     `protobuf:"bytes,5,opt,name=HttpResp,proto3" json:"HttpResp,omitempty"`
	Dependency   []*Dependency `protobuf:"bytes,6,rep,name=Dependency,proto3" json:"Dependency,omitempty"`
	TestCasePath string        `protobuf:"bytes,7,opt,name=TestCasePath,proto3" json:"TestCasePath,omitempty"`
	MockPath     string        `protobuf:"bytes,8,opt,name=MockPath,proto3" json:"MockPath,omitempty"`
	Mocks        []*Mock       `protobuf:"bytes,9,rep,name=Mocks,proto3" json:"Mocks,omitempty"`
}

func (x *TestCaseReq) Reset() {
	*x = TestCaseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestCaseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCaseReq) ProtoMessage() {}

func (x *TestCaseReq) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCaseReq.ProtoReflect.Descriptor instead.
func (*TestCaseReq) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{2}
}

func (x *TestCaseReq) GetCaptured() int64 {
	if x != nil {
		return x.Captured
	}
	return 0
}

func (x *TestCaseReq) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *TestCaseReq) GetURI() string {
	if x != nil {
		return x.URI
	}
	return ""
}

func (x *TestCaseReq) GetHttpReq() *HttpReq {
	if x != nil {
		return x.HttpReq
	}
	return nil
}

func (x *TestCaseReq) GetHttpResp() *HttpResp {
	if x != nil {
		return x.HttpResp
	}
	return nil
}

func (x *TestCaseReq) GetDependency() []*Dependency {
	if x != nil {
		return x.Dependency
	}
	return nil
}

func (x *TestCaseReq) GetTestCasePath() string {
	if x != nil {
		return x.TestCasePath
	}
	return ""
}

func (x *TestCaseReq) GetMockPath() string {
	if x != nil {
		return x.MockPath
	}
	return ""
}

func (x *TestCaseReq) GetMocks() []*Mock {
	if x != nil {
		return x.Mocks
	}
	return nil
}

type TestReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           string    `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	AppID        string    `protobuf:"bytes,2,opt,name=AppID,proto3" json:"AppID,omitempty"`
	RunID        string    `protobuf:"bytes,3,opt,name=RunID,proto3" json:"RunID,omitempty"`
	Resp         *HttpResp `protobuf:"bytes,4,opt,name=Resp,proto3" json:"Resp,omitempty"`
	TestCasePath string    `protobuf:"bytes,5,opt,name=TestCasePath,proto3" json:"TestCasePath,omitempty"`
	MockPath     string    `protobuf:"bytes,6,opt,name=MockPath,proto3" json:"MockPath,omitempty"`
}

func (x *TestReq) Reset() {
	*x = TestReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestReq) ProtoMessage() {}

func (x *TestReq) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestReq.ProtoReflect.Descriptor instead.
func (*TestReq) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{3}
}

func (x *TestReq) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *TestReq) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *TestReq) GetRunID() string {
	if x != nil {
		return x.RunID
	}
	return ""
}

func (x *TestReq) GetResp() *HttpResp {
	if x != nil {
		return x.Resp
	}
	return nil
}

func (x *TestReq) GetTestCasePath() string {
	if x != nil {
		return x.TestCasePath
	}
	return ""
}

func (x *TestReq) GetMockPath() string {
	if x != nil {
		return x.MockPath
	}
	return ""
}

type TestCase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Created  int64              `protobuf:"varint,2,opt,name=created,proto3" json:"created,omitempty"`
	Updated  int64              `protobuf:"varint,3,opt,name=updated,proto3" json:"updated,omitempty"`
	Captured int64              `protobuf:"varint,4,opt,name=captured,proto3" json:"captured,omitempty"`
	CID      string             `protobuf:"bytes,5,opt,name=CID,proto3" json:"CID,omitempty"`
	AppID    string             `protobuf:"bytes,6,opt,name=appID,proto3" json:"appID,omitempty"`
	URI      string             `protobuf:"bytes,7,opt,name=URI,proto3" json:"URI,omitempty"`
	HttpReq  *HttpReq           `protobuf:"bytes,8,opt,name=HttpReq,proto3" json:"HttpReq,omitempty"`
	HttpResp *HttpResp          `protobuf:"bytes,9,opt,name=HttpResp,proto3" json:"HttpResp,omitempty"`
	Deps     []*Dependency      `protobuf:"bytes,10,rep,name=Deps,proto3" json:"Deps,omitempty"`
	AllKeys  map[string]*StrArr `protobuf:"bytes,11,rep,name=allKeys,proto3" json:"allKeys,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Anchors  map[string]*StrArr `protobuf:"bytes,12,rep,name=anchors,proto3" json:"anchors,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Noise    []string           `protobuf:"bytes,13,rep,name=noise,proto3" json:"noise,omitempty"`
	Mocks    []*Mock            `protobuf:"bytes,14,rep,name=Mocks,proto3" json:"Mocks,omitempty"`
}

func (x *TestCase) Reset() {
	*x = TestCase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestCase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCase) ProtoMessage() {}

func (x *TestCase) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCase.ProtoReflect.Descriptor instead.
func (*TestCase) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{4}
}

func (x *TestCase) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TestCase) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *TestCase) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

func (x *TestCase) GetCaptured() int64 {
	if x != nil {
		return x.Captured
	}
	return 0
}

func (x *TestCase) GetCID() string {
	if x != nil {
		return x.CID
	}
	return ""
}

func (x *TestCase) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *TestCase) GetURI() string {
	if x != nil {
		return x.URI
	}
	return ""
}

func (x *TestCase) GetHttpReq() *HttpReq {
	if x != nil {
		return x.HttpReq
	}
	return nil
}

func (x *TestCase) GetHttpResp() *HttpResp {
	if x != nil {
		return x.HttpResp
	}
	return nil
}

func (x *TestCase) GetDeps() []*Dependency {
	if x != nil {
		return x.Deps
	}
	return nil
}

func (x *TestCase) GetAllKeys() map[string]*StrArr {
	if x != nil {
		return x.AllKeys
	}
	return nil
}

func (x *TestCase) GetAnchors() map[string]*StrArr {
	if x != nil {
		return x.Anchors
	}
	return nil
}

func (x *TestCase) GetNoise() []string {
	if x != nil {
		return x.Noise
	}
	return nil
}

func (x *TestCase) GetMocks() []*Mock {
	if x != nil {
		return x.Mocks
	}
	return nil
}

type Method struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method string `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
}

func (x *Method) Reset() {
	*x = Method{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Method) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Method) ProtoMessage() {}

func (x *Method) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Method.ProtoReflect.Descriptor instead.
func (*Method) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{5}
}

func (x *Method) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type HttpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method     string             `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	ProtoMajor int64              `protobuf:"varint,2,opt,name=ProtoMajor,proto3" json:"ProtoMajor,omitempty"`
	ProtoMinor int64              `protobuf:"varint,3,opt,name=ProtoMinor,proto3" json:"ProtoMinor,omitempty"`
	URL        string             `protobuf:"bytes,4,opt,name=URL,proto3" json:"URL,omitempty"`
	URLParams  map[string]string  `protobuf:"bytes,5,rep,name=URLParams,proto3" json:"URLParams,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Header     map[string]*StrArr `protobuf:"bytes,6,rep,name=Header,proto3" json:"Header,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body       string             `protobuf:"bytes,7,opt,name=Body,proto3" json:"Body,omitempty"`
}

func (x *HttpReq) Reset() {
	*x = HttpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpReq) ProtoMessage() {}

func (x *HttpReq) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpReq.ProtoReflect.Descriptor instead.
func (*HttpReq) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{6}
}

func (x *HttpReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *HttpReq) GetProtoMajor() int64 {
	if x != nil {
		return x.ProtoMajor
	}
	return 0
}

func (x *HttpReq) GetProtoMinor() int64 {
	if x != nil {
		return x.ProtoMinor
	}
	return 0
}

func (x *HttpReq) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *HttpReq) GetURLParams() map[string]string {
	if x != nil {
		return x.URLParams
	}
	return nil
}

func (x *HttpReq) GetHeader() map[string]*StrArr {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *HttpReq) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type StrArr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []string `protobuf:"bytes,1,rep,name=Value,proto3" json:"Value,omitempty"`
}

func (x *StrArr) Reset() {
	*x = StrArr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StrArr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StrArr) ProtoMessage() {}

func (x *StrArr) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StrArr.ProtoReflect.Descriptor instead.
func (*StrArr) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{7}
}

func (x *StrArr) GetValue() []string {
	if x != nil {
		return x.Value
	}
	return nil
}

type HttpResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode    int64              `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Header        map[string]*StrArr `protobuf:"bytes,2,rep,name=Header,proto3" json:"Header,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body          string             `protobuf:"bytes,3,opt,name=Body,proto3" json:"Body,omitempty"`
	StatusMessage string             `protobuf:"bytes,4,opt,name=StatusMessage,proto3" json:"StatusMessage,omitempty"`
	ProtoMajor    int64              `protobuf:"varint,5,opt,name=ProtoMajor,proto3" json:"ProtoMajor,omitempty"`
	ProtoMinor    int64              `protobuf:"varint,6,opt,name=ProtoMinor,proto3" json:"ProtoMinor,omitempty"`
}

func (x *HttpResp) Reset() {
	*x = HttpResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpResp) ProtoMessage() {}

func (x *HttpResp) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpResp.ProtoReflect.Descriptor instead.
func (*HttpResp) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{8}
}

func (x *HttpResp) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *HttpResp) GetHeader() map[string]*StrArr {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *HttpResp) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *HttpResp) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

func (x *HttpResp) GetProtoMajor() int64 {
	if x != nil {
		return x.ProtoMajor
	}
	return 0
}

func (x *HttpResp) GetProtoMinor() int64 {
	if x != nil {
		return x.ProtoMinor
	}
	return 0
}

type EndRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Id     string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *EndRequest) Reset() {
	*x = EndRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndRequest) ProtoMessage() {}

func (x *EndRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndRequest.ProtoReflect.Descriptor instead.
func (*EndRequest) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{9}
}

func (x *EndRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *EndRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type EndResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EndResponse) Reset() {
	*x = EndResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndResponse) ProtoMessage() {}

func (x *EndResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndResponse.ProtoReflect.Descriptor instead.
func (*EndResponse) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{10}
}

func (x *EndResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total        string `protobuf:"bytes,1,opt,name=total,proto3" json:"total,omitempty"`
	App          string `protobuf:"bytes,2,opt,name=app,proto3" json:"app,omitempty"`
	TestCasePath string `protobuf:"bytes,3,opt,name=TestCasePath,proto3" json:"TestCasePath,omitempty"`
	MockPath     string `protobuf:"bytes,4,opt,name=MockPath,proto3" json:"MockPath,omitempty"`
}

func (x *StartRequest) Reset() {
	*x = StartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRequest) ProtoMessage() {}

func (x *StartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRequest.ProtoReflect.Descriptor instead.
func (*StartRequest) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{11}
}

func (x *StartRequest) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *StartRequest) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *StartRequest) GetTestCasePath() string {
	if x != nil {
		return x.TestCasePath
	}
	return ""
}

func (x *StartRequest) GetMockPath() string {
	if x != nil {
		return x.MockPath
	}
	return ""
}

type StartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *StartResponse) Reset() {
	*x = StartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartResponse) ProtoMessage() {}

func (x *StartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartResponse.ProtoReflect.Descriptor instead.
func (*StartResponse) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{12}
}

func (x *StartResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	App string `protobuf:"bytes,2,opt,name=app,proto3" json:"app,omitempty"`
}

func (x *GetTCRequest) Reset() {
	*x = GetTCRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTCRequest) ProtoMessage() {}

func (x *GetTCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTCRequest.ProtoReflect.Descriptor instead.
func (*GetTCRequest) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{13}
}

func (x *GetTCRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetTCRequest) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

type GetTCSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App          string `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	Offset       string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit        string `protobuf:"bytes,3,opt,name=limit,proto3" json:"limit,omitempty"`
	TestCasePath string `protobuf:"bytes,4,opt,name=TestCasePath,proto3" json:"TestCasePath,omitempty"`
	MockPath     string `protobuf:"bytes,5,opt,name=MockPath,proto3" json:"MockPath,omitempty"`
}

func (x *GetTCSRequest) Reset() {
	*x = GetTCSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTCSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTCSRequest) ProtoMessage() {}

func (x *GetTCSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTCSRequest.ProtoReflect.Descriptor instead.
func (*GetTCSRequest) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{14}
}

func (x *GetTCSRequest) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *GetTCSRequest) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *GetTCSRequest) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *GetTCSRequest) GetTestCasePath() string {
	if x != nil {
		return x.TestCasePath
	}
	return ""
}

func (x *GetTCSRequest) GetMockPath() string {
	if x != nil {
		return x.MockPath
	}
	return ""
}

type GetTCSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tcs []*TestCase `protobuf:"bytes,1,rep,name=tcs,proto3" json:"tcs,omitempty"`
	Eof bool        `protobuf:"varint,2,opt,name=eof,proto3" json:"eof,omitempty"`
}

func (x *GetTCSResponse) Reset() {
	*x = GetTCSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTCSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTCSResponse) ProtoMessage() {}

func (x *GetTCSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTCSResponse.ProtoReflect.Descriptor instead.
func (*GetTCSResponse) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{15}
}

func (x *GetTCSResponse) GetTcs() []*TestCase {
	if x != nil {
		return x.Tcs
	}
	return nil
}

func (x *GetTCSResponse) GetEof() bool {
	if x != nil {
		return x.Eof
	}
	return false
}

type PostTCResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TcsId map[string]string `protobuf:"bytes,1,rep,name=tcsId,proto3" json:"tcsId,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PostTCResponse) Reset() {
	*x = PostTCResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostTCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostTCResponse) ProtoMessage() {}

func (x *PostTCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostTCResponse.ProtoReflect.Descriptor instead.
func (*PostTCResponse) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{16}
}

func (x *PostTCResponse) GetTcsId() map[string]string {
	if x != nil {
		return x.TcsId
	}
	return nil
}

type DeNoiseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeNoiseResponse) Reset() {
	*x = DeNoiseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeNoiseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeNoiseResponse) ProtoMessage() {}

func (x *DeNoiseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeNoiseResponse.ProtoReflect.Descriptor instead.
func (*DeNoiseResponse) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{17}
}

func (x *DeNoiseResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type TestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pass map[string]bool `protobuf:"bytes,1,rep,name=pass,proto3" json:"pass,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *TestResponse) Reset() {
	*x = TestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestResponse) ProtoMessage() {}

func (x *TestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestResponse.ProtoReflect.Descriptor instead.
func (*TestResponse) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{18}
}

func (x *TestResponse) GetPass() map[string]bool {
	if x != nil {
		return x.Pass
	}
	return nil
}

type Mock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string           `protobuf:"bytes,1,opt,name=Version,proto3" json:"Version,omitempty"`
	Name    string           `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Kind    string           `protobuf:"bytes,3,opt,name=Kind,proto3" json:"Kind,omitempty"`
	Spec    *Mock_SpecSchema `protobuf:"bytes,4,opt,name=Spec,proto3" json:"Spec,omitempty"`
}

func (x *Mock) Reset() {
	*x = Mock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mock) ProtoMessage() {}

func (x *Mock) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mock.ProtoReflect.Descriptor instead.
func (*Mock) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{19}
}

func (x *Mock) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Mock) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Mock) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Mock) GetSpec() *Mock_SpecSchema {
	if x != nil {
		return x.Spec
	}
	return nil
}

type PutMockReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mock *Mock  `protobuf:"bytes,1,opt,name=Mock,proto3" json:"Mock,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=Path,proto3" json:"Path,omitempty"`
}

func (x *PutMockReq) Reset() {
	*x = PutMockReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutMockReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutMockReq) ProtoMessage() {}

func (x *PutMockReq) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutMockReq.ProtoReflect.Descriptor instead.
func (*PutMockReq) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{20}
}

func (x *PutMockReq) GetMock() *Mock {
	if x != nil {
		return x.Mock
	}
	return nil
}

func (x *PutMockReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type PutMockResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inserted int64 `protobuf:"varint,1,opt,name=Inserted,proto3" json:"Inserted,omitempty"`
}

func (x *PutMockResp) Reset() {
	*x = PutMockResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutMockResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutMockResp) ProtoMessage() {}

func (x *PutMockResp) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutMockResp.ProtoReflect.Descriptor instead.
func (*PutMockResp) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{21}
}

func (x *PutMockResp) GetInserted() int64 {
	if x != nil {
		return x.Inserted
	}
	return 0
}

type GetMockReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *GetMockReq) Reset() {
	*x = GetMockReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMockReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMockReq) ProtoMessage() {}

func (x *GetMockReq) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMockReq.ProtoReflect.Descriptor instead.
func (*GetMockReq) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{22}
}

func (x *GetMockReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetMockReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetMockResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mocks []*Mock `protobuf:"bytes,1,rep,name=Mocks,proto3" json:"Mocks,omitempty"`
}

func (x *GetMockResp) Reset() {
	*x = GetMockResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMockResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMockResp) ProtoMessage() {}

func (x *GetMockResp) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMockResp.ProtoReflect.Descriptor instead.
func (*GetMockResp) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{23}
}

func (x *GetMockResp) GetMocks() []*Mock {
	if x != nil {
		return x.Mocks
	}
	return nil
}

type StartMockReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Mode string `protobuf:"bytes,2,opt,name=Mode,proto3" json:"Mode,omitempty"`
}

func (x *StartMockReq) Reset() {
	*x = StartMockReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMockReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMockReq) ProtoMessage() {}

func (x *StartMockReq) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMockReq.ProtoReflect.Descriptor instead.
func (*StartMockReq) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{24}
}

func (x *StartMockReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *StartMockReq) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

type StartMockResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists bool `protobuf:"varint,1,opt,name=Exists,proto3" json:"Exists,omitempty"`
}

func (x *StartMockResp) Reset() {
	*x = StartMockResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMockResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMockResp) ProtoMessage() {}

func (x *StartMockResp) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMockResp.ProtoReflect.Descriptor instead.
func (*StartMockResp) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{25}
}

func (x *StartMockResp) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

type Mock_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method     string             `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	ProtoMajor int64              `protobuf:"varint,2,opt,name=ProtoMajor,proto3" json:"ProtoMajor,omitempty"`
	ProtoMinor int64              `protobuf:"varint,3,opt,name=ProtoMinor,proto3" json:"ProtoMinor,omitempty"`
	URL        string             `protobuf:"bytes,4,opt,name=URL,proto3" json:"URL,omitempty"`
	Header     map[string]*StrArr `protobuf:"bytes,5,rep,name=Header,proto3" json:"Header,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body       string             `protobuf:"bytes,6,opt,name=Body,proto3" json:"Body,omitempty"`
}

func (x *Mock_Request) Reset() {
	*x = Mock_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mock_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mock_Request) ProtoMessage() {}

func (x *Mock_Request) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mock_Request.ProtoReflect.Descriptor instead.
func (*Mock_Request) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{19, 0}
}

func (x *Mock_Request) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Mock_Request) GetProtoMajor() int64 {
	if x != nil {
		return x.ProtoMajor
	}
	return 0
}

func (x *Mock_Request) GetProtoMinor() int64 {
	if x != nil {
		return x.ProtoMinor
	}
	return 0
}

func (x *Mock_Request) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *Mock_Request) GetHeader() map[string]*StrArr {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Mock_Request) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type Mock_Object struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *Mock_Object) Reset() {
	*x = Mock_Object{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mock_Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mock_Object) ProtoMessage() {}

func (x *Mock_Object) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mock_Object.ProtoReflect.Descriptor instead.
func (*Mock_Object) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{19, 1}
}

func (x *Mock_Object) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Mock_Object) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Mock_GrpcReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body   string `protobuf:"bytes,1,opt,name=Body,proto3" json:"Body,omitempty"`
	Method string `protobuf:"bytes,2,opt,name=Method,proto3" json:"Method,omitempty"`
}

func (x *Mock_GrpcReq) Reset() {
	*x = Mock_GrpcReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mock_GrpcReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mock_GrpcReq) ProtoMessage() {}

func (x *Mock_GrpcReq) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mock_GrpcReq.ProtoReflect.Descriptor instead.
func (*Mock_GrpcReq) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{19, 2}
}

func (x *Mock_GrpcReq) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Mock_GrpcReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type Mock_SpecSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata    map[string]string  `protobuf:"bytes,1,rep,name=Metadata,proto3" json:"Metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Objects     []*Mock_Object     `protobuf:"bytes,2,rep,name=Objects,proto3" json:"Objects,omitempty"`
	Req         *HttpReq           `protobuf:"bytes,3,opt,name=Req,proto3" json:"Req,omitempty"`
	Res         *HttpResp          `protobuf:"bytes,4,opt,name=Res,proto3" json:"Res,omitempty"`
	Mocks       []string           `protobuf:"bytes,5,rep,name=Mocks,proto3" json:"Mocks,omitempty"`
	Assertions  map[string]*StrArr `protobuf:"bytes,6,rep,name=Assertions,proto3" json:"Assertions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Created     int64              `protobuf:"varint,7,opt,name=Created,proto3" json:"Created,omitempty"`
	Type        string             `protobuf:"bytes,8,opt,name=Type,proto3" json:"Type,omitempty"`
	GrpcRequest *Mock_GrpcReq      `protobuf:"bytes,9,opt,name=GrpcRequest,proto3" json:"GrpcRequest,omitempty"`
	GrpcResp    string             `protobuf:"bytes,10,opt,name=GrpcResp,proto3" json:"GrpcResp,omitempty"`
}

func (x *Mock_SpecSchema) Reset() {
	*x = Mock_SpecSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_regression_services_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mock_SpecSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mock_SpecSchema) ProtoMessage() {}

func (x *Mock_SpecSchema) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_regression_services_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mock_SpecSchema.ProtoReflect.Descriptor instead.
func (*Mock_SpecSchema) Descriptor() ([]byte, []int) {
	return file_grpc_regression_services_proto_rawDescGZIP(), []int{19, 3}
}

func (x *Mock_SpecSchema) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Mock_SpecSchema) GetObjects() []*Mock_Object {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *Mock_SpecSchema) GetReq() *HttpReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *Mock_SpecSchema) GetRes() *HttpResp {
	if x != nil {
		return x.Res
	}
	return nil
}

func (x *Mock_SpecSchema) GetMocks() []string {
	if x != nil {
		return x.Mocks
	}
	return nil
}

func (x *Mock_SpecSchema) GetAssertions() map[string]*StrArr {
	if x != nil {
		return x.Assertions
	}
	return nil
}

func (x *Mock_SpecSchema) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *Mock_SpecSchema) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Mock_SpecSchema) GetGrpcRequest() *Mock_GrpcReq {
	if x != nil {
		return x.GrpcRequest
	}
	return nil
}

func (x *Mock_SpecSchema) GetGrpcResp() string {
	if x != nil {
		return x.GrpcResp
	}
	return ""
}

var File_grpc_regression_services_proto protoreflect.FileDescriptor

var file_grpc_regression_services_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x72, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0xca, 0x01, 0x0a, 0x0a, 0x44,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x32, 0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x04, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x37,
	0x0a, 0x09, 0x4d, 0x65, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1d, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x42, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x42, 0x69, 0x6e, 0x22, 0xca, 0x02, 0x0a, 0x0b, 0x54, 0x65, 0x73, 0x74, 0x43,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72,
	0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x49, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x49, 0x12, 0x2b, 0x0a, 0x07, 0x48, 0x74,
	0x74, 0x70, 0x52, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x52, 0x07,
	0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x08, 0x48, 0x74, 0x74, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x48,
	0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63,
	0x79, 0x52, 0x0a, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x22, 0x0a,
	0x0c, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x6f, 0x63, 0x6b, 0x50, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x6f, 0x63, 0x6b, 0x50, 0x61, 0x74, 0x68, 0x12, 0x24, 0x0a,
	0x05, 0x4d, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x4d, 0x6f,
	0x63, 0x6b, 0x73, 0x22, 0xad, 0x01, 0x0a, 0x07, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x75, 0x6e, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x52, 0x75, 0x6e, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x04, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x65, 0x73, 0x74, 0x43,
	0x61, 0x73, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x6f, 0x63, 0x6b, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x6f, 0x63, 0x6b, 0x50,
	0x61, 0x74, 0x68, 0x22, 0xf9, 0x04, 0x0a, 0x08, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x43, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x43,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x49, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x49, 0x12, 0x2b, 0x0a, 0x07, 0x48, 0x74,
	0x74, 0x70, 0x52, 0x65, 0x71, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x52, 0x07,
	0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x08, 0x48, 0x74, 0x74, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x48,
	0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x04, 0x44, 0x65, 0x70, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x04, 0x44, 0x65, 0x70,
	0x73, 0x12, 0x39, 0x0a, 0x07, 0x61, 0x6c, 0x6c, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x65,
	0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x61, 0x6c, 0x6c, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x39, 0x0a, 0x07,
	0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73,
	0x65, 0x2e, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x69, 0x73, 0x65,
	0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x69, 0x73, 0x65, 0x12, 0x24, 0x0a,
	0x05, 0x4d, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x4d, 0x6f,
	0x63, 0x6b, 0x73, 0x1a, 0x4c, 0x0a, 0x0c, 0x41, 0x6c, 0x6c, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x74, 0x72, 0x41, 0x72, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x4c, 0x0a, 0x0c, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74,
	0x72, 0x41, 0x72, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x20, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x22, 0x89, 0x03, 0x0a, 0x07, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x61,
	0x6a, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x69,
	0x6e, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x3e, 0x0a, 0x09, 0x55, 0x52, 0x4c, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x2e, 0x55, 0x52,
	0x4c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x55, 0x52,
	0x4c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x35, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x42, 0x6f,
	0x64, 0x79, 0x1a, 0x3c, 0x0a, 0x0e, 0x55, 0x52, 0x4c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x4b, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x41,
	0x72, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1e, 0x0a,
	0x06, 0x53, 0x74, 0x72, 0x41, 0x72, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa9, 0x02,
	0x0a, 0x08, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x1a, 0x4b, 0x0a, 0x0b,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x41, 0x72, 0x72, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x34, 0x0a, 0x0a, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x27, 0x0a, 0x0b, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x76, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x70,
	0x12, 0x22, 0x0a, 0x0c, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x6f, 0x63, 0x6b, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x6f, 0x63, 0x6b, 0x50, 0x61, 0x74, 0x68,
	0x22, 0x1f, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x30, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x54, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x61, 0x70, 0x70, 0x22, 0x8f, 0x01, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x54, 0x43, 0x53, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x65, 0x73,
	0x74, 0x43, 0x61, 0x73, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x6f, 0x63,
	0x6b, 0x50, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x6f, 0x63,
	0x6b, 0x50, 0x61, 0x74, 0x68, 0x22, 0x48, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x54, 0x43, 0x53, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x03, 0x74, 0x63, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x52, 0x03, 0x74, 0x63, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x6f, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x65, 0x6f, 0x66, 0x22,
	0x85, 0x01, 0x0a, 0x0e, 0x70, 0x6f, 0x73, 0x74, 0x54, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x74, 0x63, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x6f, 0x73,
	0x74, 0x54, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x63, 0x73, 0x49,
	0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x74, 0x63, 0x73, 0x49, 0x64, 0x1a, 0x38, 0x0a,
	0x0a, 0x54, 0x63, 0x73, 0x49, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2b, 0x0a, 0x0f, 0x64, 0x65, 0x4e, 0x6f, 0x69,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x7d, 0x0a, 0x0c, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x70, 0x61, 0x73, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x50, 0x61,
	0x73, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xb6, 0x08, 0x0a, 0x04, 0x4d, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4b, 0x69,
	0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x2d,
	0x0a, 0x04, 0x53, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x04, 0x53, 0x70, 0x65, 0x63, 0x1a, 0x90, 0x02,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x61, 0x6a, 0x6f,
	0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x69, 0x6e, 0x6f,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x55, 0x52, 0x4c, 0x12, 0x3a, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d,
	0x6f, 0x63, 0x6b, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x42,
	0x6f, 0x64, 0x79, 0x1a, 0x4b, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x74, 0x72, 0x41, 0x72, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x30, 0x0a, 0x06, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x1a, 0x35, 0x0a, 0x07, 0x47, 0x72, 0x70, 0x63, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x42, 0x6f, 0x64,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x1a, 0xc0, 0x04, 0x0a, 0x0a, 0x53, 0x70,
	0x65, 0x63, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x43, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a,
	0x07, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x63, 0x6b, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x23,
	0x0a, 0x03, 0x52, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x52, 0x03,
	0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x03, 0x52, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x03, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x63,
	0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x6f, 0x63, 0x6b, 0x73, 0x12,
	0x49, 0x0a, 0x0a, 0x41, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d,
	0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x41,
	0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a,
	0x41, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x47, 0x72, 0x70, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x63, 0x6b, 0x2e, 0x47, 0x72,
	0x70, 0x63, 0x52, 0x65, 0x71, 0x52, 0x0b, 0x47, 0x72, 0x70, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x72, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x47, 0x72, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x1a, 0x3b,
	0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4f, 0x0a, 0x0f, 0x41,
	0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x41, 0x72,
	0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x44, 0x0a, 0x0a,
	0x50, 0x75, 0x74, 0x4d, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x04, 0x4d, 0x6f,
	0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x4d, 0x6f, 0x63, 0x6b, 0x12, 0x12,
	0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61,
	0x74, 0x68, 0x22, 0x29, 0x0a, 0x0b, 0x50, 0x75, 0x74, 0x4d, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x22, 0x34, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x33, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x4d, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x24, 0x0a, 0x05, 0x4d, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x63,
	0x6b, 0x52, 0x05, 0x4d, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x36, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x4d, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x4d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4d, 0x6f, 0x64, 0x65,
	0x22, 0x27, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x32, 0xcc, 0x04, 0x0a, 0x11, 0x52, 0x65,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x32, 0x0a, 0x03, 0x45, 0x6e, 0x64, 0x12, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x16, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x05, 0x47, 0x65, 0x74, 0x54, 0x43, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x67, 0x65, 0x74, 0x54, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61,
	0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x54, 0x43, 0x53, 0x12, 0x17, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x67, 0x65, 0x74, 0x54, 0x43, 0x53, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x67, 0x65, 0x74, 0x54, 0x43, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x39, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x43, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x74,
	0x54, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x44, 0x65,
	0x4e, 0x6f, 0x69, 0x73, 0x65, 0x12, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x4e, 0x6f, 0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x54, 0x65, 0x73, 0x74, 0x12, 0x11, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x50, 0x75, 0x74, 0x4d, 0x6f, 0x63,
	0x6b, 0x12, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x74,
	0x4d, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x50, 0x75, 0x74, 0x4d, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x14, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x1a, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x67, 0x65, 0x74, 0x4d,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x4d, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a,
	0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x4d, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x42, 0x3b, 0x0a, 0x14, 0x69, 0x6f, 0x2e, 0x6b,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x73, 0x74, 0x75, 0x62, 0x73,
	0x5a, 0x23, 0x67, 0x6f, 0x2e, 0x6b, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x69, 0x6f, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x72, 0x65, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_regression_services_proto_rawDescOnce sync.Once
	file_grpc_regression_services_proto_rawDescData = file_grpc_regression_services_proto_rawDesc
)

func file_grpc_regression_services_proto_rawDescGZIP() []byte {
	file_grpc_regression_services_proto_rawDescOnce.Do(func() {
		file_grpc_regression_services_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_regression_services_proto_rawDescData)
	})
	return file_grpc_regression_services_proto_rawDescData
}

var file_grpc_regression_services_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_grpc_regression_services_proto_goTypes = []interface{}{
	(*Dependency)(nil),      // 0: services.Dependency
	(*DataBytes)(nil),       // 1: services.DataBytes
	(*TestCaseReq)(nil),     // 2: services.TestCaseReq
	(*TestReq)(nil),         // 3: services.TestReq
	(*TestCase)(nil),        // 4: services.TestCase
	(*Method)(nil),          // 5: services.Method
	(*HttpReq)(nil),         // 6: services.HttpReq
	(*StrArr)(nil),          // 7: services.StrArr
	(*HttpResp)(nil),        // 8: services.HttpResp
	(*EndRequest)(nil),      // 9: services.endRequest
	(*EndResponse)(nil),     // 10: services.endResponse
	(*StartRequest)(nil),    // 11: services.startRequest
	(*StartResponse)(nil),   // 12: services.startResponse
	(*GetTCRequest)(nil),    // 13: services.getTCRequest
	(*GetTCSRequest)(nil),   // 14: services.getTCSRequest
	(*GetTCSResponse)(nil),  // 15: services.getTCSResponse
	(*PostTCResponse)(nil),  // 16: services.postTCResponse
	(*DeNoiseResponse)(nil), // 17: services.deNoiseResponse
	(*TestResponse)(nil),    // 18: services.testResponse
	(*Mock)(nil),            // 19: services.Mock
	(*PutMockReq)(nil),      // 20: services.PutMockReq
	(*PutMockResp)(nil),     // 21: services.PutMockResp
	(*GetMockReq)(nil),      // 22: services.GetMockReq
	(*GetMockResp)(nil),     // 23: services.getMockResp
	(*StartMockReq)(nil),    // 24: services.StartMockReq
	(*StartMockResp)(nil),   // 25: services.StartMockResp
	nil,                     // 26: services.Dependency.MetaEntry
	nil,                     // 27: services.TestCase.AllKeysEntry
	nil,                     // 28: services.TestCase.AnchorsEntry
	nil,                     // 29: services.HttpReq.URLParamsEntry
	nil,                     // 30: services.HttpReq.HeaderEntry
	nil,                     // 31: services.HttpResp.HeaderEntry
	nil,                     // 32: services.postTCResponse.TcsIdEntry
	nil,                     // 33: services.testResponse.PassEntry
	(*Mock_Request)(nil),    // 34: services.Mock.Request
	(*Mock_Object)(nil),     // 35: services.Mock.Object
	(*Mock_GrpcReq)(nil),    // 36: services.Mock.GrpcReq
	(*Mock_SpecSchema)(nil), // 37: services.Mock.SpecSchema
	nil,                     // 38: services.Mock.Request.HeaderEntry
	nil,                     // 39: services.Mock.SpecSchema.MetadataEntry
	nil,                     // 40: services.Mock.SpecSchema.AssertionsEntry
}
var file_grpc_regression_services_proto_depIdxs = []int32{
	26, // 0: services.Dependency.Meta:type_name -> services.Dependency.MetaEntry
	1,  // 1: services.Dependency.Data:type_name -> services.DataBytes
	6,  // 2: services.TestCaseReq.HttpReq:type_name -> services.HttpReq
	8,  // 3: services.TestCaseReq.HttpResp:type_name -> services.HttpResp
	0,  // 4: services.TestCaseReq.Dependency:type_name -> services.Dependency
	19, // 5: services.TestCaseReq.Mocks:type_name -> services.Mock
	8,  // 6: services.TestReq.Resp:type_name -> services.HttpResp
	6,  // 7: services.TestCase.HttpReq:type_name -> services.HttpReq
	8,  // 8: services.TestCase.HttpResp:type_name -> services.HttpResp
	0,  // 9: services.TestCase.Deps:type_name -> services.Dependency
	27, // 10: services.TestCase.allKeys:type_name -> services.TestCase.AllKeysEntry
	28, // 11: services.TestCase.anchors:type_name -> services.TestCase.AnchorsEntry
	19, // 12: services.TestCase.Mocks:type_name -> services.Mock
	29, // 13: services.HttpReq.URLParams:type_name -> services.HttpReq.URLParamsEntry
	30, // 14: services.HttpReq.Header:type_name -> services.HttpReq.HeaderEntry
	31, // 15: services.HttpResp.Header:type_name -> services.HttpResp.HeaderEntry
	4,  // 16: services.getTCSResponse.tcs:type_name -> services.TestCase
	32, // 17: services.postTCResponse.tcsId:type_name -> services.postTCResponse.TcsIdEntry
	33, // 18: services.testResponse.pass:type_name -> services.testResponse.PassEntry
	37, // 19: services.Mock.Spec:type_name -> services.Mock.SpecSchema
	19, // 20: services.PutMockReq.Mock:type_name -> services.Mock
	19, // 21: services.getMockResp.Mocks:type_name -> services.Mock
	7,  // 22: services.TestCase.AllKeysEntry.value:type_name -> services.StrArr
	7,  // 23: services.TestCase.AnchorsEntry.value:type_name -> services.StrArr
	7,  // 24: services.HttpReq.HeaderEntry.value:type_name -> services.StrArr
	7,  // 25: services.HttpResp.HeaderEntry.value:type_name -> services.StrArr
	38, // 26: services.Mock.Request.Header:type_name -> services.Mock.Request.HeaderEntry
	39, // 27: services.Mock.SpecSchema.Metadata:type_name -> services.Mock.SpecSchema.MetadataEntry
	35, // 28: services.Mock.SpecSchema.Objects:type_name -> services.Mock.Object
	6,  // 29: services.Mock.SpecSchema.Req:type_name -> services.HttpReq
	8,  // 30: services.Mock.SpecSchema.Res:type_name -> services.HttpResp
	40, // 31: services.Mock.SpecSchema.Assertions:type_name -> services.Mock.SpecSchema.AssertionsEntry
	36, // 32: services.Mock.SpecSchema.GrpcRequest:type_name -> services.Mock.GrpcReq
	7,  // 33: services.Mock.Request.HeaderEntry.value:type_name -> services.StrArr
	7,  // 34: services.Mock.SpecSchema.AssertionsEntry.value:type_name -> services.StrArr
	9,  // 35: services.RegressionService.End:input_type -> services.endRequest
	11, // 36: services.RegressionService.Start:input_type -> services.startRequest
	13, // 37: services.RegressionService.GetTC:input_type -> services.getTCRequest
	14, // 38: services.RegressionService.GetTCS:input_type -> services.getTCSRequest
	2,  // 39: services.RegressionService.PostTC:input_type -> services.TestCaseReq
	3,  // 40: services.RegressionService.DeNoise:input_type -> services.TestReq
	3,  // 41: services.RegressionService.Test:input_type -> services.TestReq
	20, // 42: services.RegressionService.PutMock:input_type -> services.PutMockReq
	22, // 43: services.RegressionService.GetMocks:input_type -> services.GetMockReq
	24, // 44: services.RegressionService.StartMocking:input_type -> services.StartMockReq
	10, // 45: services.RegressionService.End:output_type -> services.endResponse
	12, // 46: services.RegressionService.Start:output_type -> services.startResponse
	4,  // 47: services.RegressionService.GetTC:output_type -> services.TestCase
	15, // 48: services.RegressionService.GetTCS:output_type -> services.getTCSResponse
	16, // 49: services.RegressionService.PostTC:output_type -> services.postTCResponse
	17, // 50: services.RegressionService.DeNoise:output_type -> services.deNoiseResponse
	18, // 51: services.RegressionService.Test:output_type -> services.testResponse
	21, // 52: services.RegressionService.PutMock:output_type -> services.PutMockResp
	23, // 53: services.RegressionService.GetMocks:output_type -> services.getMockResp
	25, // 54: services.RegressionService.StartMocking:output_type -> services.StartMockResp
	45, // [45:55] is the sub-list for method output_type
	35, // [35:45] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_grpc_regression_services_proto_init() }
func file_grpc_regression_services_proto_init() {
	if File_grpc_regression_services_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_regression_services_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dependency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataBytes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestCaseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestCase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Method); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StrArr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTCRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTCSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTCSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostTCResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeNoiseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutMockReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutMockResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMockReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMockResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartMockReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartMockResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mock_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mock_Object); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mock_GrpcReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_regression_services_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mock_SpecSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_regression_services_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_regression_services_proto_goTypes,
		DependencyIndexes: file_grpc_regression_services_proto_depIdxs,
		MessageInfos:      file_grpc_regression_services_proto_msgTypes,
	}.Build()
	File_grpc_regression_services_proto = out.File
	file_grpc_regression_services_proto_rawDesc = nil
	file_grpc_regression_services_proto_goTypes = nil
	file_grpc_regression_services_proto_depIdxs = nil
}
